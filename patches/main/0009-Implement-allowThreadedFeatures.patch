From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: ishland <ishlandmc@yeah.net>
Date: Wed, 25 Dec 2024 09:50:17 +0800
Subject: [PATCH] Implement allowThreadedFeatures


diff --git a/c2me-rewrites-chunk-system/src/main/java/com/ishland/c2me/rewrites/chunksystem/common/Config.java b/c2me-rewrites-chunk-system/src/main/java/com/ishland/c2me/rewrites/chunksystem/common/Config.java
index 3c314cf8..659f8552 100644
--- a/c2me-rewrites-chunk-system/src/main/java/com/ishland/c2me/rewrites/chunksystem/common/Config.java
+++ b/c2me-rewrites-chunk-system/src/main/java/com/ishland/c2me/rewrites/chunksystem/common/Config.java
@@ -58,6 +58,13 @@ public class Config {
                     """)
             .getBoolean(true, false);
 
+    public static final boolean allowThreadedFeatures = new ConfigSystem.ConfigAccessor()
+            .key("chunkSystem.allowThreadedFeatures")
+            .comment("""
+                    Whether to allow threaded feature placements
+                    """)
+            .getBoolean(true, false);
+
     public static void init() {
         // intentionally empty
     }
diff --git a/c2me-rewrites-chunk-system/src/main/java/com/ishland/c2me/rewrites/chunksystem/common/statuses/VanillaWorldGenerationDelegate.java b/c2me-rewrites-chunk-system/src/main/java/com/ishland/c2me/rewrites/chunksystem/common/statuses/VanillaWorldGenerationDelegate.java
index b1ba07ca..83487121 100644
--- a/c2me-rewrites-chunk-system/src/main/java/com/ishland/c2me/rewrites/chunksystem/common/statuses/VanillaWorldGenerationDelegate.java
+++ b/c2me-rewrites-chunk-system/src/main/java/com/ishland/c2me/rewrites/chunksystem/common/statuses/VanillaWorldGenerationDelegate.java
@@ -7,6 +7,7 @@ import com.ishland.c2me.base.common.threadstate.ThreadInstrumentation;
 import com.ishland.c2me.base.mixin.access.IThreadedAnvilChunkStorage;
 import com.ishland.c2me.rewrites.chunksystem.common.ChunkLoadingContext;
 import com.ishland.c2me.rewrites.chunksystem.common.ChunkState;
+import com.ishland.c2me.rewrites.chunksystem.common.Config;
 import com.ishland.c2me.rewrites.chunksystem.common.NewChunkStatus;
 import com.ishland.c2me.rewrites.chunksystem.common.threadstate.ChunkTaskWork;
 import com.ishland.flowsched.executor.LockToken;
@@ -55,12 +56,16 @@ public class VanillaWorldGenerationDelegate extends NewChunkStatus {
         return deps.toArray(KeyStatusPair[]::new);
     }
 
-    private static <T> CompletableFuture<T> runTaskWithLock(ChunkPos target, int radius, SchedulingManager schedulingManager, Supplier<CompletableFuture<T>> action) {
-        ObjectArrayList<LockToken> lockTargets = new ObjectArrayList<>((2 * radius + 1) * (2 * radius + 1) + 1);
+    private static <T> CompletableFuture<T> runTaskWithLock(ChunkPos target, int radius, SchedulingManager schedulingManager, Supplier<CompletableFuture<T>> action, boolean lockGlobal) {
+        ObjectArrayList<LockToken> lockTargets = new ObjectArrayList<>((2 * radius + 1) * (2 * radius + 1) + 1 + (lockGlobal ? 1 : 0));
         for (int x = target.x - radius; x <= target.x + radius; x++)
             for (int z = target.z - radius; z <= target.z + radius; z++)
                 lockTargets.add(new LockTokenImpl(schedulingManager.getId(), ChunkPos.toLong(x, z), LockTokenImpl.Usage.WORLDGEN));
 
+        if (lockGlobal) {
+            lockTargets.add(new LockTokenImpl(schedulingManager.getId(), ChunkPos.MARKER, LockTokenImpl.Usage.WORLDGEN));
+        }
+
         final ScheduledTask<T> task = new ScheduledTask<>(
                 target.toLong(),
                 action,
@@ -142,7 +147,8 @@ public class VanillaWorldGenerationDelegate extends NewChunkStatus {
                                     }).thenAccept(__ -> {
                                     });
                         }
-                    }
+                    },
+                    !Config.allowThreadedFeatures && status == ChunkStatus.FEATURES
             );
         }
     }
