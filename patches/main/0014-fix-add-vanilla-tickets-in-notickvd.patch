From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: ishland <ishlandmc@yeah.net>
Date: Fri, 6 Dec 2024 23:12:12 +0800
Subject: [PATCH] fix: add vanilla tickets in notickvd

Backported from c75bb5d0ad71904d710a4475896f2ebf20e5fc1f

diff --git a/c2me-notickvd/src/main/java/com/ishland/c2me/notickvd/common/PlayerNoTickLoader.java b/c2me-notickvd/src/main/java/com/ishland/c2me/notickvd/common/PlayerNoTickLoader.java
index 319e00c9..aabdfd8e 100644
--- a/c2me-notickvd/src/main/java/com/ishland/c2me/notickvd/common/PlayerNoTickLoader.java
+++ b/c2me-notickvd/src/main/java/com/ishland/c2me/notickvd/common/PlayerNoTickLoader.java
@@ -18,10 +18,12 @@ import it.unimi.dsi.fastutil.longs.LongLinkedOpenHashSet;
 import it.unimi.dsi.fastutil.longs.LongSet;
 import it.unimi.dsi.fastutil.objects.ObjectBidirectionalIterator;
 import it.unimi.dsi.fastutil.objects.ReferenceArrayList;
+import net.minecraft.server.world.ChunkTicketType;
 import net.minecraft.server.world.ServerChunkLoadingManager;
 import net.minecraft.util.math.ChunkPos;
 import org.slf4j.Logger;
 
+import java.util.Comparator;
 import java.util.concurrent.CompletableFuture;
 import java.util.concurrent.atomic.AtomicBoolean;
 import java.util.function.LongFunction;
@@ -31,6 +33,7 @@ public class PlayerNoTickLoader {
     private static final Logger LOGGER = LogUtils.getLogger();
 
     public static final ItemTicket.TicketType TICKET_TYPE = new ItemTicket.TicketType("c2me:notickvd");
+    public static final ChunkTicketType<ChunkPos> VANILLA_TICKET_TYPE = ChunkTicketType.create("c2me_notickvd", Comparator.comparingLong(ChunkPos::toLong));
 
     private final ServerChunkLoadingManager tacs;
     private final NoTickSystem noTickSystem;
@@ -181,6 +184,7 @@ public class PlayerNoTickLoader {
                 NewChunkStatus.SERVER_ACCESSIBLE_CHUNK_SENDING,
                 StatusAdvancingScheduler.NO_OP
         );
+        this.noTickSystem.mainBeforeTicketTicks.add(() -> this.tacs.getTicketManager().addTicketWithLevel(VANILLA_TICKET_TYPE, pos, 33, pos));
         return holder.getFutureForStatus(NewChunkStatus.SERVER_ACCESSIBLE);
     }
 
@@ -192,6 +196,7 @@ public class PlayerNoTickLoader {
                 pos,
                 NewChunkStatus.SERVER_ACCESSIBLE_CHUNK_SENDING
         );
+        this.noTickSystem.mainBeforeTicketTicks.add(() -> this.tacs.getTicketManager().removeTicketWithLevel(VANILLA_TICKET_TYPE, pos, 33, pos));
     }
 
     public long getPendingLoadsCount() {
